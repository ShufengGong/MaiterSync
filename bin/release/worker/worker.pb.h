// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: worker/worker.proto

#ifndef PROTOBUF_worker_2fworker_2eproto__INCLUDED
#define PROTOBUF_worker_2fworker_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "util/common.pb.h"
// @@protoc_insertion_point(includes)

namespace dsm {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_worker_2fworker_2eproto();
void protobuf_AssignDesc_worker_2fworker_2eproto();
void protobuf_ShutdownFile_worker_2fworker_2eproto();

class CheckpointInfo;
class CheckpointRequest;
class ClearTable;
class EnableTrigger;
class HashGet;
class IteratorRequest;
class IteratorResponse;
class KVPairData;
class KernelDone;
class KernelRequest;
class MethodStats;
class RegisterWorkerRequest;
class ShardAssignment;
class ShardAssignmentRequest;
class ShardInfo;
class StartRestore;
class SwapTable;
class TableData;
class TerminationNotification;

enum CheckpointType {
  CP_NONE = 0,
  CP_MASTER_CONTROLLED = 1,
  CP_ROLLING = 2
};
bool CheckpointType_IsValid(int value);
const CheckpointType CheckpointType_MIN = CP_NONE;
const CheckpointType CheckpointType_MAX = CP_ROLLING;
const int CheckpointType_ARRAYSIZE = CheckpointType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckpointType_descriptor();
inline const ::std::string& CheckpointType_Name(CheckpointType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckpointType_descriptor(), value);
}
inline bool CheckpointType_Parse(
    const ::std::string& name, CheckpointType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckpointType>(
    CheckpointType_descriptor(), name, value);
}
// ===================================================================

class RegisterWorkerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.RegisterWorkerRequest) */ {
 public:
  RegisterWorkerRequest();
  virtual ~RegisterWorkerRequest();

  RegisterWorkerRequest(const RegisterWorkerRequest& from);

  inline RegisterWorkerRequest& operator=(const RegisterWorkerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterWorkerRequest& default_instance();

  void Swap(RegisterWorkerRequest* other);

  // implements Message ----------------------------------------------

  inline RegisterWorkerRequest* New() const { return New(NULL); }

  RegisterWorkerRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterWorkerRequest& from);
  void MergeFrom(const RegisterWorkerRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegisterWorkerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dsm.RegisterWorkerRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static RegisterWorkerRequest* default_instance_;
};
// -------------------------------------------------------------------

class ShardAssignment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.ShardAssignment) */ {
 public:
  ShardAssignment();
  virtual ~ShardAssignment();

  ShardAssignment(const ShardAssignment& from);

  inline ShardAssignment& operator=(const ShardAssignment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShardAssignment& default_instance();

  void Swap(ShardAssignment* other);

  // implements Message ----------------------------------------------

  inline ShardAssignment* New() const { return New(NULL); }

  ShardAssignment* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShardAssignment& from);
  void MergeFrom(const ShardAssignment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShardAssignment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 table = 1;
  bool has_table() const;
  void clear_table();
  static const int kTableFieldNumber = 1;
  ::google::protobuf::int32 table() const;
  void set_table(::google::protobuf::int32 value);

  // required int32 shard = 2;
  bool has_shard() const;
  void clear_shard();
  static const int kShardFieldNumber = 2;
  ::google::protobuf::int32 shard() const;
  void set_shard(::google::protobuf::int32 value);

  // required int32 new_worker = 4;
  bool has_new_worker() const;
  void clear_new_worker();
  static const int kNewWorkerFieldNumber = 4;
  ::google::protobuf::int32 new_worker() const;
  void set_new_worker(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dsm.ShardAssignment)
 private:
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_shard();
  inline void clear_has_shard();
  inline void set_has_new_worker();
  inline void clear_has_new_worker();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 table_;
  ::google::protobuf::int32 shard_;
  ::google::protobuf::int32 new_worker_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static ShardAssignment* default_instance_;
};
// -------------------------------------------------------------------

class ShardAssignmentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.ShardAssignmentRequest) */ {
 public:
  ShardAssignmentRequest();
  virtual ~ShardAssignmentRequest();

  ShardAssignmentRequest(const ShardAssignmentRequest& from);

  inline ShardAssignmentRequest& operator=(const ShardAssignmentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShardAssignmentRequest& default_instance();

  void Swap(ShardAssignmentRequest* other);

  // implements Message ----------------------------------------------

  inline ShardAssignmentRequest* New() const { return New(NULL); }

  ShardAssignmentRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShardAssignmentRequest& from);
  void MergeFrom(const ShardAssignmentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShardAssignmentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dsm.ShardAssignment assign = 1;
  int assign_size() const;
  void clear_assign();
  static const int kAssignFieldNumber = 1;
  const ::dsm::ShardAssignment& assign(int index) const;
  ::dsm::ShardAssignment* mutable_assign(int index);
  ::dsm::ShardAssignment* add_assign();
  ::google::protobuf::RepeatedPtrField< ::dsm::ShardAssignment >*
      mutable_assign();
  const ::google::protobuf::RepeatedPtrField< ::dsm::ShardAssignment >&
      assign() const;

  // @@protoc_insertion_point(class_scope:dsm.ShardAssignmentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dsm::ShardAssignment > assign_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static ShardAssignmentRequest* default_instance_;
};
// -------------------------------------------------------------------

class ShardInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.ShardInfo) */ {
 public:
  ShardInfo();
  virtual ~ShardInfo();

  ShardInfo(const ShardInfo& from);

  inline ShardInfo& operator=(const ShardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShardInfo& default_instance();

  void Swap(ShardInfo* other);

  // implements Message ----------------------------------------------

  inline ShardInfo* New() const { return New(NULL); }

  ShardInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShardInfo& from);
  void MergeFrom(const ShardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 table = 1;
  bool has_table() const;
  void clear_table();
  static const int kTableFieldNumber = 1;
  ::google::protobuf::uint32 table() const;
  void set_table(::google::protobuf::uint32 value);

  // required uint32 shard = 2;
  bool has_shard() const;
  void clear_shard();
  static const int kShardFieldNumber = 2;
  ::google::protobuf::uint32 shard() const;
  void set_shard(::google::protobuf::uint32 value);

  // required uint64 entries = 3;
  bool has_entries() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 3;
  ::google::protobuf::uint64 entries() const;
  void set_entries(::google::protobuf::uint64 value);

  // required int32 owner = 4 [default = -1];
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 4;
  ::google::protobuf::int32 owner() const;
  void set_owner(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dsm.ShardInfo)
 private:
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_shard();
  inline void clear_has_shard();
  inline void set_has_entries();
  inline void clear_has_entries();
  inline void set_has_owner();
  inline void clear_has_owner();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 table_;
  ::google::protobuf::uint32 shard_;
  ::google::protobuf::uint64 entries_;
  ::google::protobuf::int32 owner_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static ShardInfo* default_instance_;
};
// -------------------------------------------------------------------

class MethodStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.MethodStats) */ {
 public:
  MethodStats();
  virtual ~MethodStats();

  MethodStats(const MethodStats& from);

  inline MethodStats& operator=(const MethodStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MethodStats& default_instance();

  void Swap(MethodStats* other);

  // implements Message ----------------------------------------------

  inline MethodStats* New() const { return New(NULL); }

  MethodStats* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MethodStats& from);
  void MergeFrom(const MethodStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MethodStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double total_time = 1;
  bool has_total_time() const;
  void clear_total_time();
  static const int kTotalTimeFieldNumber = 1;
  double total_time() const;
  void set_total_time(double value);

  // required double shard_time = 2;
  bool has_shard_time() const;
  void clear_shard_time();
  static const int kShardTimeFieldNumber = 2;
  double shard_time() const;
  void set_shard_time(double value);

  // required int32 calls = 3;
  bool has_calls() const;
  void clear_calls();
  static const int kCallsFieldNumber = 3;
  ::google::protobuf::int32 calls() const;
  void set_calls(::google::protobuf::int32 value);

  // required int32 shard_calls = 4;
  bool has_shard_calls() const;
  void clear_shard_calls();
  static const int kShardCallsFieldNumber = 4;
  ::google::protobuf::int32 shard_calls() const;
  void set_shard_calls(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dsm.MethodStats)
 private:
  inline void set_has_total_time();
  inline void clear_has_total_time();
  inline void set_has_shard_time();
  inline void clear_has_shard_time();
  inline void set_has_calls();
  inline void clear_has_calls();
  inline void set_has_shard_calls();
  inline void clear_has_shard_calls();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double total_time_;
  double shard_time_;
  ::google::protobuf::int32 calls_;
  ::google::protobuf::int32 shard_calls_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static MethodStats* default_instance_;
};
// -------------------------------------------------------------------

class KernelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.KernelRequest) */ {
 public:
  KernelRequest();
  virtual ~KernelRequest();

  KernelRequest(const KernelRequest& from);

  inline KernelRequest& operator=(const KernelRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KernelRequest& default_instance();

  void Swap(KernelRequest* other);

  // implements Message ----------------------------------------------

  inline KernelRequest* New() const { return New(NULL); }

  KernelRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KernelRequest& from);
  void MergeFrom(const KernelRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KernelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string kernel = 1;
  bool has_kernel() const;
  void clear_kernel();
  static const int kKernelFieldNumber = 1;
  const ::std::string& kernel() const;
  void set_kernel(const ::std::string& value);
  void set_kernel(const char* value);
  void set_kernel(const char* value, size_t size);
  ::std::string* mutable_kernel();
  ::std::string* release_kernel();
  void set_allocated_kernel(::std::string* kernel);

  // required string method = 2;
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // optional int32 table = 3;
  bool has_table() const;
  void clear_table();
  static const int kTableFieldNumber = 3;
  ::google::protobuf::int32 table() const;
  void set_table(::google::protobuf::int32 value);

  // optional int32 shard = 4;
  bool has_shard() const;
  void clear_shard();
  static const int kShardFieldNumber = 4;
  ::google::protobuf::int32 shard() const;
  void set_shard(::google::protobuf::int32 value);

  // required .dsm.Args args = 5;
  bool has_args() const;
  void clear_args();
  static const int kArgsFieldNumber = 5;
  const ::dsm::Args& args() const;
  ::dsm::Args* mutable_args();
  ::dsm::Args* release_args();
  void set_allocated_args(::dsm::Args* args);

  // @@protoc_insertion_point(class_scope:dsm.KernelRequest)
 private:
  inline void set_has_kernel();
  inline void clear_has_kernel();
  inline void set_has_method();
  inline void clear_has_method();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_shard();
  inline void clear_has_shard();
  inline void set_has_args();
  inline void clear_has_args();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr kernel_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::int32 table_;
  ::google::protobuf::int32 shard_;
  ::dsm::Args* args_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static KernelRequest* default_instance_;
};
// -------------------------------------------------------------------

class KernelDone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.KernelDone) */ {
 public:
  KernelDone();
  virtual ~KernelDone();

  KernelDone(const KernelDone& from);

  inline KernelDone& operator=(const KernelDone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KernelDone& default_instance();

  void Swap(KernelDone* other);

  // implements Message ----------------------------------------------

  inline KernelDone* New() const { return New(NULL); }

  KernelDone* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KernelDone& from);
  void MergeFrom(const KernelDone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KernelDone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .dsm.KernelRequest kernel = 1;
  bool has_kernel() const;
  void clear_kernel();
  static const int kKernelFieldNumber = 1;
  const ::dsm::KernelRequest& kernel() const;
  ::dsm::KernelRequest* mutable_kernel();
  ::dsm::KernelRequest* release_kernel();
  void set_allocated_kernel(::dsm::KernelRequest* kernel);

  // repeated .dsm.ShardInfo shards = 5;
  int shards_size() const;
  void clear_shards();
  static const int kShardsFieldNumber = 5;
  const ::dsm::ShardInfo& shards(int index) const;
  ::dsm::ShardInfo* mutable_shards(int index);
  ::dsm::ShardInfo* add_shards();
  ::google::protobuf::RepeatedPtrField< ::dsm::ShardInfo >*
      mutable_shards();
  const ::google::protobuf::RepeatedPtrField< ::dsm::ShardInfo >&
      shards() const;

  // @@protoc_insertion_point(class_scope:dsm.KernelDone)
 private:
  inline void set_has_kernel();
  inline void clear_has_kernel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::dsm::KernelRequest* kernel_;
  ::google::protobuf::RepeatedPtrField< ::dsm::ShardInfo > shards_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static KernelDone* default_instance_;
};
// -------------------------------------------------------------------

class IteratorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.IteratorRequest) */ {
 public:
  IteratorRequest();
  virtual ~IteratorRequest();

  IteratorRequest(const IteratorRequest& from);

  inline IteratorRequest& operator=(const IteratorRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IteratorRequest& default_instance();

  void Swap(IteratorRequest* other);

  // implements Message ----------------------------------------------

  inline IteratorRequest* New() const { return New(NULL); }

  IteratorRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IteratorRequest& from);
  void MergeFrom(const IteratorRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IteratorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 table = 1;
  bool has_table() const;
  void clear_table();
  static const int kTableFieldNumber = 1;
  ::google::protobuf::uint32 table() const;
  void set_table(::google::protobuf::uint32 value);

  // required uint32 shard = 2;
  bool has_shard() const;
  void clear_shard();
  static const int kShardFieldNumber = 2;
  ::google::protobuf::uint32 shard() const;
  void set_shard(::google::protobuf::uint32 value);

  // optional int32 id = 3 [default = -1];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional uint32 row_count = 4 [default = 1];
  bool has_row_count() const;
  void clear_row_count();
  static const int kRowCountFieldNumber = 4;
  ::google::protobuf::uint32 row_count() const;
  void set_row_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dsm.IteratorRequest)
 private:
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_shard();
  inline void clear_has_shard();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_row_count();
  inline void clear_has_row_count();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 table_;
  ::google::protobuf::uint32 shard_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::uint32 row_count_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static IteratorRequest* default_instance_;
};
// -------------------------------------------------------------------

class IteratorResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.IteratorResponse) */ {
 public:
  IteratorResponse();
  virtual ~IteratorResponse();

  IteratorResponse(const IteratorResponse& from);

  inline IteratorResponse& operator=(const IteratorResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IteratorResponse& default_instance();

  void Swap(IteratorResponse* other);

  // implements Message ----------------------------------------------

  inline IteratorResponse* New() const { return New(NULL); }

  IteratorResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IteratorResponse& from);
  void MergeFrom(const IteratorResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IteratorResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required bool done = 2;
  bool has_done() const;
  void clear_done();
  static const int kDoneFieldNumber = 2;
  bool done() const;
  void set_done(bool value);

  // repeated bytes key = 3;
  int key_size() const;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key(int index) const;
  ::std::string* mutable_key(int index);
  void set_key(int index, const ::std::string& value);
  void set_key(int index, const char* value);
  void set_key(int index, const void* value, size_t size);
  ::std::string* add_key();
  void add_key(const ::std::string& value);
  void add_key(const char* value);
  void add_key(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // repeated bytes value = 4;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  const ::std::string& value(int index) const;
  ::std::string* mutable_value(int index);
  void set_value(int index, const ::std::string& value);
  void set_value(int index, const char* value);
  void set_value(int index, const void* value, size_t size);
  ::std::string* add_value();
  void add_value(const ::std::string& value);
  void add_value(const char* value);
  void add_value(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // required uint32 row_count = 5;
  bool has_row_count() const;
  void clear_row_count();
  static const int kRowCountFieldNumber = 5;
  ::google::protobuf::uint32 row_count() const;
  void set_row_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dsm.IteratorResponse)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_done();
  inline void clear_has_done();
  inline void set_has_row_count();
  inline void clear_has_row_count();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  bool done_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  ::google::protobuf::uint32 row_count_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static IteratorResponse* default_instance_;
};
// -------------------------------------------------------------------

class HashGet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.HashGet) */ {
 public:
  HashGet();
  virtual ~HashGet();

  HashGet(const HashGet& from);

  inline HashGet& operator=(const HashGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HashGet& default_instance();

  void Swap(HashGet* other);

  // implements Message ----------------------------------------------

  inline HashGet* New() const { return New(NULL); }

  HashGet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HashGet& from);
  void MergeFrom(const HashGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HashGet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 table = 1;
  bool has_table() const;
  void clear_table();
  static const int kTableFieldNumber = 1;
  ::google::protobuf::uint32 table() const;
  void set_table(::google::protobuf::uint32 value);

  // required uint32 shard = 2;
  bool has_shard() const;
  void clear_shard();
  static const int kShardFieldNumber = 2;
  ::google::protobuf::uint32 shard() const;
  void set_shard(::google::protobuf::uint32 value);

  // optional bytes key = 3;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional uint32 index = 4;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 4;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dsm.HashGet)
 private:
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_shard();
  inline void clear_has_shard();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_index();
  inline void clear_has_index();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 table_;
  ::google::protobuf::uint32 shard_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static HashGet* default_instance_;
};
// -------------------------------------------------------------------

class TableData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.TableData) */ {
 public:
  TableData();
  virtual ~TableData();

  TableData(const TableData& from);

  inline TableData& operator=(const TableData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableData& default_instance();

  void Swap(TableData* other);

  // implements Message ----------------------------------------------

  inline TableData* New() const { return New(NULL); }

  TableData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableData& from);
  void MergeFrom(const TableData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TableData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // required uint32 table = 2;
  bool has_table() const;
  void clear_table();
  static const int kTableFieldNumber = 2;
  ::google::protobuf::uint32 table() const;
  void set_table(::google::protobuf::uint32 value);

  // required uint32 shard = 3;
  bool has_shard() const;
  void clear_shard();
  static const int kShardFieldNumber = 3;
  ::google::protobuf::uint32 shard() const;
  void set_shard(::google::protobuf::uint32 value);

  // required bool done = 4;
  bool has_done() const;
  void clear_done();
  static const int kDoneFieldNumber = 4;
  bool done() const;
  void set_done(bool value);

  // optional bytes table_data = 5;
  bool has_table_data() const;
  void clear_table_data();
  static const int kTableDataFieldNumber = 5;
  const ::std::string& table_data() const;
  void set_table_data(const ::std::string& value);
  void set_table_data(const char* value);
  void set_table_data(const void* value, size_t size);
  ::std::string* mutable_table_data();
  ::std::string* release_table_data();
  void set_allocated_table_data(::std::string* table_data);

  // repeated .dsm.Record rec_data = 6;
  int rec_data_size() const;
  void clear_rec_data();
  static const int kRecDataFieldNumber = 6;
  const ::dsm::Record& rec_data(int index) const;
  ::dsm::Record* mutable_rec_data(int index);
  ::dsm::Record* add_rec_data();
  ::google::protobuf::RepeatedPtrField< ::dsm::Record >*
      mutable_rec_data();
  const ::google::protobuf::RepeatedPtrField< ::dsm::Record >&
      rec_data() const;

  // optional int32 epoch = 11;
  bool has_epoch() const;
  void clear_epoch();
  static const int kEpochFieldNumber = 11;
  ::google::protobuf::int32 epoch() const;
  void set_epoch(::google::protobuf::int32 value);

  // optional int32 marker = 12 [default = -1];
  bool has_marker() const;
  void clear_marker();
  static const int kMarkerFieldNumber = 12;
  ::google::protobuf::int32 marker() const;
  void set_marker(::google::protobuf::int32 value);

  // optional bool missing_key = 13;
  bool has_missing_key() const;
  void clear_missing_key();
  static const int kMissingKeyFieldNumber = 13;
  bool missing_key() const;
  void set_missing_key(bool value);

  // @@protoc_insertion_point(class_scope:dsm.TableData)
 private:
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_shard();
  inline void clear_has_shard();
  inline void set_has_done();
  inline void clear_has_done();
  inline void set_has_table_data();
  inline void clear_has_table_data();
  inline void set_has_epoch();
  inline void clear_has_epoch();
  inline void set_has_marker();
  inline void clear_has_marker();
  inline void set_has_missing_key();
  inline void clear_has_missing_key();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 table_;
  ::google::protobuf::internal::ArenaStringPtr table_data_;
  ::google::protobuf::uint32 shard_;
  bool done_;
  bool missing_key_;
  ::google::protobuf::RepeatedPtrField< ::dsm::Record > rec_data_;
  ::google::protobuf::int32 epoch_;
  ::google::protobuf::int32 marker_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static TableData* default_instance_;
};
// -------------------------------------------------------------------

class KVPairData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.KVPairData) */ {
 public:
  KVPairData();
  virtual ~KVPairData();

  KVPairData(const KVPairData& from);

  inline KVPairData& operator=(const KVPairData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KVPairData& default_instance();

  void Swap(KVPairData* other);

  // implements Message ----------------------------------------------

  inline KVPairData* New() const { return New(NULL); }

  KVPairData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KVPairData& from);
  void MergeFrom(const KVPairData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KVPairData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // required uint32 table = 2;
  bool has_table() const;
  void clear_table();
  static const int kTableFieldNumber = 2;
  ::google::protobuf::uint32 table() const;
  void set_table(::google::protobuf::uint32 value);

  // required uint32 shard = 3;
  bool has_shard() const;
  void clear_shard();
  static const int kShardFieldNumber = 3;
  ::google::protobuf::uint32 shard() const;
  void set_shard(::google::protobuf::uint32 value);

  // required bool done = 4;
  bool has_done() const;
  void clear_done();
  static const int kDoneFieldNumber = 4;
  bool done() const;
  void set_done(bool value);

  // optional bytes table_data = 5;
  bool has_table_data() const;
  void clear_table_data();
  static const int kTableDataFieldNumber = 5;
  const ::std::string& table_data() const;
  void set_table_data(const ::std::string& value);
  void set_table_data(const char* value);
  void set_table_data(const void* value, size_t size);
  ::std::string* mutable_table_data();
  ::std::string* release_table_data();
  void set_allocated_table_data(::std::string* table_data);

  // repeated .dsm.Arg kv_data = 6;
  int kv_data_size() const;
  void clear_kv_data();
  static const int kKvDataFieldNumber = 6;
  const ::dsm::Arg& kv_data(int index) const;
  ::dsm::Arg* mutable_kv_data(int index);
  ::dsm::Arg* add_kv_data();
  ::google::protobuf::RepeatedPtrField< ::dsm::Arg >*
      mutable_kv_data();
  const ::google::protobuf::RepeatedPtrField< ::dsm::Arg >&
      kv_data() const;

  // optional int32 epoch = 11;
  bool has_epoch() const;
  void clear_epoch();
  static const int kEpochFieldNumber = 11;
  ::google::protobuf::int32 epoch() const;
  void set_epoch(::google::protobuf::int32 value);

  // optional int32 marker = 12 [default = -1];
  bool has_marker() const;
  void clear_marker();
  static const int kMarkerFieldNumber = 12;
  ::google::protobuf::int32 marker() const;
  void set_marker(::google::protobuf::int32 value);

  // optional bool missing_key = 13;
  bool has_missing_key() const;
  void clear_missing_key();
  static const int kMissingKeyFieldNumber = 13;
  bool missing_key() const;
  void set_missing_key(bool value);

  // @@protoc_insertion_point(class_scope:dsm.KVPairData)
 private:
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_shard();
  inline void clear_has_shard();
  inline void set_has_done();
  inline void clear_has_done();
  inline void set_has_table_data();
  inline void clear_has_table_data();
  inline void set_has_epoch();
  inline void clear_has_epoch();
  inline void set_has_marker();
  inline void clear_has_marker();
  inline void set_has_missing_key();
  inline void clear_has_missing_key();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 table_;
  ::google::protobuf::internal::ArenaStringPtr table_data_;
  ::google::protobuf::uint32 shard_;
  bool done_;
  bool missing_key_;
  ::google::protobuf::RepeatedPtrField< ::dsm::Arg > kv_data_;
  ::google::protobuf::int32 epoch_;
  ::google::protobuf::int32 marker_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static KVPairData* default_instance_;
};
// -------------------------------------------------------------------

class CheckpointRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.CheckpointRequest) */ {
 public:
  CheckpointRequest();
  virtual ~CheckpointRequest();

  CheckpointRequest(const CheckpointRequest& from);

  inline CheckpointRequest& operator=(const CheckpointRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckpointRequest& default_instance();

  void Swap(CheckpointRequest* other);

  // implements Message ----------------------------------------------

  inline CheckpointRequest* New() const { return New(NULL); }

  CheckpointRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckpointRequest& from);
  void MergeFrom(const CheckpointRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CheckpointRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 epoch = 1;
  bool has_epoch() const;
  void clear_epoch();
  static const int kEpochFieldNumber = 1;
  ::google::protobuf::int32 epoch() const;
  void set_epoch(::google::protobuf::int32 value);

  // required int32 checkpoint_type = 2;
  bool has_checkpoint_type() const;
  void clear_checkpoint_type();
  static const int kCheckpointTypeFieldNumber = 2;
  ::google::protobuf::int32 checkpoint_type() const;
  void set_checkpoint_type(::google::protobuf::int32 value);

  // repeated int32 table = 3;
  int table_size() const;
  void clear_table();
  static const int kTableFieldNumber = 3;
  ::google::protobuf::int32 table(int index) const;
  void set_table(int index, ::google::protobuf::int32 value);
  void add_table(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      table() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_table();

  // @@protoc_insertion_point(class_scope:dsm.CheckpointRequest)
 private:
  inline void set_has_epoch();
  inline void clear_has_epoch();
  inline void set_has_checkpoint_type();
  inline void clear_has_checkpoint_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 epoch_;
  ::google::protobuf::int32 checkpoint_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > table_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static CheckpointRequest* default_instance_;
};
// -------------------------------------------------------------------

class TerminationNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.TerminationNotification) */ {
 public:
  TerminationNotification();
  virtual ~TerminationNotification();

  TerminationNotification(const TerminationNotification& from);

  inline TerminationNotification& operator=(const TerminationNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminationNotification& default_instance();

  void Swap(TerminationNotification* other);

  // implements Message ----------------------------------------------

  inline TerminationNotification* New() const { return New(NULL); }

  TerminationNotification* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TerminationNotification& from);
  void MergeFrom(const TerminationNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TerminationNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 epoch = 1;
  bool has_epoch() const;
  void clear_epoch();
  static const int kEpochFieldNumber = 1;
  ::google::protobuf::int32 epoch() const;
  void set_epoch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dsm.TerminationNotification)
 private:
  inline void set_has_epoch();
  inline void clear_has_epoch();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 epoch_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static TerminationNotification* default_instance_;
};
// -------------------------------------------------------------------

class StartRestore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.StartRestore) */ {
 public:
  StartRestore();
  virtual ~StartRestore();

  StartRestore(const StartRestore& from);

  inline StartRestore& operator=(const StartRestore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartRestore& default_instance();

  void Swap(StartRestore* other);

  // implements Message ----------------------------------------------

  inline StartRestore* New() const { return New(NULL); }

  StartRestore* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartRestore& from);
  void MergeFrom(const StartRestore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartRestore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 epoch = 1;
  bool has_epoch() const;
  void clear_epoch();
  static const int kEpochFieldNumber = 1;
  ::google::protobuf::int32 epoch() const;
  void set_epoch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dsm.StartRestore)
 private:
  inline void set_has_epoch();
  inline void clear_has_epoch();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 epoch_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static StartRestore* default_instance_;
};
// -------------------------------------------------------------------

class CheckpointInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.CheckpointInfo) */ {
 public:
  CheckpointInfo();
  virtual ~CheckpointInfo();

  CheckpointInfo(const CheckpointInfo& from);

  inline CheckpointInfo& operator=(const CheckpointInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckpointInfo& default_instance();

  void Swap(CheckpointInfo* other);

  // implements Message ----------------------------------------------

  inline CheckpointInfo* New() const { return New(NULL); }

  CheckpointInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckpointInfo& from);
  void MergeFrom(const CheckpointInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CheckpointInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 checkpoint_epoch = 1;
  bool has_checkpoint_epoch() const;
  void clear_checkpoint_epoch();
  static const int kCheckpointEpochFieldNumber = 1;
  ::google::protobuf::int32 checkpoint_epoch() const;
  void set_checkpoint_epoch(::google::protobuf::int32 value);

  // required int32 kernel_epoch = 2;
  bool has_kernel_epoch() const;
  void clear_kernel_epoch();
  static const int kKernelEpochFieldNumber = 2;
  ::google::protobuf::int32 kernel_epoch() const;
  void set_kernel_epoch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dsm.CheckpointInfo)
 private:
  inline void set_has_checkpoint_epoch();
  inline void clear_has_checkpoint_epoch();
  inline void set_has_kernel_epoch();
  inline void clear_has_kernel_epoch();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 checkpoint_epoch_;
  ::google::protobuf::int32 kernel_epoch_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static CheckpointInfo* default_instance_;
};
// -------------------------------------------------------------------

class SwapTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.SwapTable) */ {
 public:
  SwapTable();
  virtual ~SwapTable();

  SwapTable(const SwapTable& from);

  inline SwapTable& operator=(const SwapTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwapTable& default_instance();

  void Swap(SwapTable* other);

  // implements Message ----------------------------------------------

  inline SwapTable* New() const { return New(NULL); }

  SwapTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SwapTable& from);
  void MergeFrom(const SwapTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SwapTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 table_a = 1;
  bool has_table_a() const;
  void clear_table_a();
  static const int kTableAFieldNumber = 1;
  ::google::protobuf::int32 table_a() const;
  void set_table_a(::google::protobuf::int32 value);

  // required int32 table_b = 2;
  bool has_table_b() const;
  void clear_table_b();
  static const int kTableBFieldNumber = 2;
  ::google::protobuf::int32 table_b() const;
  void set_table_b(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dsm.SwapTable)
 private:
  inline void set_has_table_a();
  inline void clear_has_table_a();
  inline void set_has_table_b();
  inline void clear_has_table_b();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 table_a_;
  ::google::protobuf::int32 table_b_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static SwapTable* default_instance_;
};
// -------------------------------------------------------------------

class ClearTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.ClearTable) */ {
 public:
  ClearTable();
  virtual ~ClearTable();

  ClearTable(const ClearTable& from);

  inline ClearTable& operator=(const ClearTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearTable& default_instance();

  void Swap(ClearTable* other);

  // implements Message ----------------------------------------------

  inline ClearTable* New() const { return New(NULL); }

  ClearTable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClearTable& from);
  void MergeFrom(const ClearTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClearTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 table = 1;
  bool has_table() const;
  void clear_table();
  static const int kTableFieldNumber = 1;
  ::google::protobuf::int32 table() const;
  void set_table(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dsm.ClearTable)
 private:
  inline void set_has_table();
  inline void clear_has_table();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 table_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static ClearTable* default_instance_;
};
// -------------------------------------------------------------------

class EnableTrigger : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.EnableTrigger) */ {
 public:
  EnableTrigger();
  virtual ~EnableTrigger();

  EnableTrigger(const EnableTrigger& from);

  inline EnableTrigger& operator=(const EnableTrigger& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnableTrigger& default_instance();

  void Swap(EnableTrigger* other);

  // implements Message ----------------------------------------------

  inline EnableTrigger* New() const { return New(NULL); }

  EnableTrigger* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnableTrigger& from);
  void MergeFrom(const EnableTrigger& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableTrigger* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 trigger_id = 1;
  bool has_trigger_id() const;
  void clear_trigger_id();
  static const int kTriggerIdFieldNumber = 1;
  ::google::protobuf::int32 trigger_id() const;
  void set_trigger_id(::google::protobuf::int32 value);

  // required int32 table = 2;
  bool has_table() const;
  void clear_table();
  static const int kTableFieldNumber = 2;
  ::google::protobuf::int32 table() const;
  void set_table(::google::protobuf::int32 value);

  // required bool enable = 3;
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 3;
  bool enable() const;
  void set_enable(bool value);

  // @@protoc_insertion_point(class_scope:dsm.EnableTrigger)
 private:
  inline void set_has_trigger_id();
  inline void clear_has_trigger_id();
  inline void set_has_table();
  inline void clear_has_table();
  inline void set_has_enable();
  inline void clear_has_enable();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 trigger_id_;
  ::google::protobuf::int32 table_;
  bool enable_;
  friend void  protobuf_AddDesc_worker_2fworker_2eproto();
  friend void protobuf_AssignDesc_worker_2fworker_2eproto();
  friend void protobuf_ShutdownFile_worker_2fworker_2eproto();

  void InitAsDefaultInstance();
  static EnableTrigger* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterWorkerRequest

// required int32 id = 1;
inline bool RegisterWorkerRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterWorkerRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterWorkerRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterWorkerRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RegisterWorkerRequest::id() const {
  // @@protoc_insertion_point(field_get:dsm.RegisterWorkerRequest.id)
  return id_;
}
inline void RegisterWorkerRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:dsm.RegisterWorkerRequest.id)
}

// -------------------------------------------------------------------

// ShardAssignment

// required int32 table = 1;
inline bool ShardAssignment::has_table() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShardAssignment::set_has_table() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShardAssignment::clear_has_table() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShardAssignment::clear_table() {
  table_ = 0;
  clear_has_table();
}
inline ::google::protobuf::int32 ShardAssignment::table() const {
  // @@protoc_insertion_point(field_get:dsm.ShardAssignment.table)
  return table_;
}
inline void ShardAssignment::set_table(::google::protobuf::int32 value) {
  set_has_table();
  table_ = value;
  // @@protoc_insertion_point(field_set:dsm.ShardAssignment.table)
}

// required int32 shard = 2;
inline bool ShardAssignment::has_shard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShardAssignment::set_has_shard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShardAssignment::clear_has_shard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShardAssignment::clear_shard() {
  shard_ = 0;
  clear_has_shard();
}
inline ::google::protobuf::int32 ShardAssignment::shard() const {
  // @@protoc_insertion_point(field_get:dsm.ShardAssignment.shard)
  return shard_;
}
inline void ShardAssignment::set_shard(::google::protobuf::int32 value) {
  set_has_shard();
  shard_ = value;
  // @@protoc_insertion_point(field_set:dsm.ShardAssignment.shard)
}

// required int32 new_worker = 4;
inline bool ShardAssignment::has_new_worker() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShardAssignment::set_has_new_worker() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShardAssignment::clear_has_new_worker() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShardAssignment::clear_new_worker() {
  new_worker_ = 0;
  clear_has_new_worker();
}
inline ::google::protobuf::int32 ShardAssignment::new_worker() const {
  // @@protoc_insertion_point(field_get:dsm.ShardAssignment.new_worker)
  return new_worker_;
}
inline void ShardAssignment::set_new_worker(::google::protobuf::int32 value) {
  set_has_new_worker();
  new_worker_ = value;
  // @@protoc_insertion_point(field_set:dsm.ShardAssignment.new_worker)
}

// -------------------------------------------------------------------

// ShardAssignmentRequest

// repeated .dsm.ShardAssignment assign = 1;
inline int ShardAssignmentRequest::assign_size() const {
  return assign_.size();
}
inline void ShardAssignmentRequest::clear_assign() {
  assign_.Clear();
}
inline const ::dsm::ShardAssignment& ShardAssignmentRequest::assign(int index) const {
  // @@protoc_insertion_point(field_get:dsm.ShardAssignmentRequest.assign)
  return assign_.Get(index);
}
inline ::dsm::ShardAssignment* ShardAssignmentRequest::mutable_assign(int index) {
  // @@protoc_insertion_point(field_mutable:dsm.ShardAssignmentRequest.assign)
  return assign_.Mutable(index);
}
inline ::dsm::ShardAssignment* ShardAssignmentRequest::add_assign() {
  // @@protoc_insertion_point(field_add:dsm.ShardAssignmentRequest.assign)
  return assign_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dsm::ShardAssignment >*
ShardAssignmentRequest::mutable_assign() {
  // @@protoc_insertion_point(field_mutable_list:dsm.ShardAssignmentRequest.assign)
  return &assign_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dsm::ShardAssignment >&
ShardAssignmentRequest::assign() const {
  // @@protoc_insertion_point(field_list:dsm.ShardAssignmentRequest.assign)
  return assign_;
}

// -------------------------------------------------------------------

// ShardInfo

// required uint32 table = 1;
inline bool ShardInfo::has_table() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShardInfo::set_has_table() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShardInfo::clear_has_table() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShardInfo::clear_table() {
  table_ = 0u;
  clear_has_table();
}
inline ::google::protobuf::uint32 ShardInfo::table() const {
  // @@protoc_insertion_point(field_get:dsm.ShardInfo.table)
  return table_;
}
inline void ShardInfo::set_table(::google::protobuf::uint32 value) {
  set_has_table();
  table_ = value;
  // @@protoc_insertion_point(field_set:dsm.ShardInfo.table)
}

// required uint32 shard = 2;
inline bool ShardInfo::has_shard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShardInfo::set_has_shard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShardInfo::clear_has_shard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShardInfo::clear_shard() {
  shard_ = 0u;
  clear_has_shard();
}
inline ::google::protobuf::uint32 ShardInfo::shard() const {
  // @@protoc_insertion_point(field_get:dsm.ShardInfo.shard)
  return shard_;
}
inline void ShardInfo::set_shard(::google::protobuf::uint32 value) {
  set_has_shard();
  shard_ = value;
  // @@protoc_insertion_point(field_set:dsm.ShardInfo.shard)
}

// required uint64 entries = 3;
inline bool ShardInfo::has_entries() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShardInfo::set_has_entries() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShardInfo::clear_has_entries() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShardInfo::clear_entries() {
  entries_ = GOOGLE_ULONGLONG(0);
  clear_has_entries();
}
inline ::google::protobuf::uint64 ShardInfo::entries() const {
  // @@protoc_insertion_point(field_get:dsm.ShardInfo.entries)
  return entries_;
}
inline void ShardInfo::set_entries(::google::protobuf::uint64 value) {
  set_has_entries();
  entries_ = value;
  // @@protoc_insertion_point(field_set:dsm.ShardInfo.entries)
}

// required int32 owner = 4 [default = -1];
inline bool ShardInfo::has_owner() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShardInfo::set_has_owner() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShardInfo::clear_has_owner() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShardInfo::clear_owner() {
  owner_ = -1;
  clear_has_owner();
}
inline ::google::protobuf::int32 ShardInfo::owner() const {
  // @@protoc_insertion_point(field_get:dsm.ShardInfo.owner)
  return owner_;
}
inline void ShardInfo::set_owner(::google::protobuf::int32 value) {
  set_has_owner();
  owner_ = value;
  // @@protoc_insertion_point(field_set:dsm.ShardInfo.owner)
}

// -------------------------------------------------------------------

// MethodStats

// required double total_time = 1;
inline bool MethodStats::has_total_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MethodStats::set_has_total_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MethodStats::clear_has_total_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MethodStats::clear_total_time() {
  total_time_ = 0;
  clear_has_total_time();
}
inline double MethodStats::total_time() const {
  // @@protoc_insertion_point(field_get:dsm.MethodStats.total_time)
  return total_time_;
}
inline void MethodStats::set_total_time(double value) {
  set_has_total_time();
  total_time_ = value;
  // @@protoc_insertion_point(field_set:dsm.MethodStats.total_time)
}

// required double shard_time = 2;
inline bool MethodStats::has_shard_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MethodStats::set_has_shard_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MethodStats::clear_has_shard_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MethodStats::clear_shard_time() {
  shard_time_ = 0;
  clear_has_shard_time();
}
inline double MethodStats::shard_time() const {
  // @@protoc_insertion_point(field_get:dsm.MethodStats.shard_time)
  return shard_time_;
}
inline void MethodStats::set_shard_time(double value) {
  set_has_shard_time();
  shard_time_ = value;
  // @@protoc_insertion_point(field_set:dsm.MethodStats.shard_time)
}

// required int32 calls = 3;
inline bool MethodStats::has_calls() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MethodStats::set_has_calls() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MethodStats::clear_has_calls() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MethodStats::clear_calls() {
  calls_ = 0;
  clear_has_calls();
}
inline ::google::protobuf::int32 MethodStats::calls() const {
  // @@protoc_insertion_point(field_get:dsm.MethodStats.calls)
  return calls_;
}
inline void MethodStats::set_calls(::google::protobuf::int32 value) {
  set_has_calls();
  calls_ = value;
  // @@protoc_insertion_point(field_set:dsm.MethodStats.calls)
}

// required int32 shard_calls = 4;
inline bool MethodStats::has_shard_calls() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MethodStats::set_has_shard_calls() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MethodStats::clear_has_shard_calls() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MethodStats::clear_shard_calls() {
  shard_calls_ = 0;
  clear_has_shard_calls();
}
inline ::google::protobuf::int32 MethodStats::shard_calls() const {
  // @@protoc_insertion_point(field_get:dsm.MethodStats.shard_calls)
  return shard_calls_;
}
inline void MethodStats::set_shard_calls(::google::protobuf::int32 value) {
  set_has_shard_calls();
  shard_calls_ = value;
  // @@protoc_insertion_point(field_set:dsm.MethodStats.shard_calls)
}

// -------------------------------------------------------------------

// KernelRequest

// required string kernel = 1;
inline bool KernelRequest::has_kernel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KernelRequest::set_has_kernel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KernelRequest::clear_has_kernel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KernelRequest::clear_kernel() {
  kernel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_kernel();
}
inline const ::std::string& KernelRequest::kernel() const {
  // @@protoc_insertion_point(field_get:dsm.KernelRequest.kernel)
  return kernel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KernelRequest::set_kernel(const ::std::string& value) {
  set_has_kernel();
  kernel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dsm.KernelRequest.kernel)
}
inline void KernelRequest::set_kernel(const char* value) {
  set_has_kernel();
  kernel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dsm.KernelRequest.kernel)
}
inline void KernelRequest::set_kernel(const char* value, size_t size) {
  set_has_kernel();
  kernel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dsm.KernelRequest.kernel)
}
inline ::std::string* KernelRequest::mutable_kernel() {
  set_has_kernel();
  // @@protoc_insertion_point(field_mutable:dsm.KernelRequest.kernel)
  return kernel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KernelRequest::release_kernel() {
  // @@protoc_insertion_point(field_release:dsm.KernelRequest.kernel)
  clear_has_kernel();
  return kernel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KernelRequest::set_allocated_kernel(::std::string* kernel) {
  if (kernel != NULL) {
    set_has_kernel();
  } else {
    clear_has_kernel();
  }
  kernel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kernel);
  // @@protoc_insertion_point(field_set_allocated:dsm.KernelRequest.kernel)
}

// required string method = 2;
inline bool KernelRequest::has_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KernelRequest::set_has_method() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KernelRequest::clear_has_method() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KernelRequest::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
inline const ::std::string& KernelRequest::method() const {
  // @@protoc_insertion_point(field_get:dsm.KernelRequest.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KernelRequest::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dsm.KernelRequest.method)
}
inline void KernelRequest::set_method(const char* value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dsm.KernelRequest.method)
}
inline void KernelRequest::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dsm.KernelRequest.method)
}
inline ::std::string* KernelRequest::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:dsm.KernelRequest.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KernelRequest::release_method() {
  // @@protoc_insertion_point(field_release:dsm.KernelRequest.method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KernelRequest::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:dsm.KernelRequest.method)
}

// optional int32 table = 3;
inline bool KernelRequest::has_table() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KernelRequest::set_has_table() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KernelRequest::clear_has_table() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KernelRequest::clear_table() {
  table_ = 0;
  clear_has_table();
}
inline ::google::protobuf::int32 KernelRequest::table() const {
  // @@protoc_insertion_point(field_get:dsm.KernelRequest.table)
  return table_;
}
inline void KernelRequest::set_table(::google::protobuf::int32 value) {
  set_has_table();
  table_ = value;
  // @@protoc_insertion_point(field_set:dsm.KernelRequest.table)
}

// optional int32 shard = 4;
inline bool KernelRequest::has_shard() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KernelRequest::set_has_shard() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KernelRequest::clear_has_shard() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KernelRequest::clear_shard() {
  shard_ = 0;
  clear_has_shard();
}
inline ::google::protobuf::int32 KernelRequest::shard() const {
  // @@protoc_insertion_point(field_get:dsm.KernelRequest.shard)
  return shard_;
}
inline void KernelRequest::set_shard(::google::protobuf::int32 value) {
  set_has_shard();
  shard_ = value;
  // @@protoc_insertion_point(field_set:dsm.KernelRequest.shard)
}

// required .dsm.Args args = 5;
inline bool KernelRequest::has_args() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void KernelRequest::set_has_args() {
  _has_bits_[0] |= 0x00000010u;
}
inline void KernelRequest::clear_has_args() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void KernelRequest::clear_args() {
  if (args_ != NULL) args_->::dsm::Args::Clear();
  clear_has_args();
}
inline const ::dsm::Args& KernelRequest::args() const {
  // @@protoc_insertion_point(field_get:dsm.KernelRequest.args)
  return args_ != NULL ? *args_ : *default_instance_->args_;
}
inline ::dsm::Args* KernelRequest::mutable_args() {
  set_has_args();
  if (args_ == NULL) {
    args_ = new ::dsm::Args;
  }
  // @@protoc_insertion_point(field_mutable:dsm.KernelRequest.args)
  return args_;
}
inline ::dsm::Args* KernelRequest::release_args() {
  // @@protoc_insertion_point(field_release:dsm.KernelRequest.args)
  clear_has_args();
  ::dsm::Args* temp = args_;
  args_ = NULL;
  return temp;
}
inline void KernelRequest::set_allocated_args(::dsm::Args* args) {
  delete args_;
  args_ = args;
  if (args) {
    set_has_args();
  } else {
    clear_has_args();
  }
  // @@protoc_insertion_point(field_set_allocated:dsm.KernelRequest.args)
}

// -------------------------------------------------------------------

// KernelDone

// required .dsm.KernelRequest kernel = 1;
inline bool KernelDone::has_kernel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KernelDone::set_has_kernel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KernelDone::clear_has_kernel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KernelDone::clear_kernel() {
  if (kernel_ != NULL) kernel_->::dsm::KernelRequest::Clear();
  clear_has_kernel();
}
inline const ::dsm::KernelRequest& KernelDone::kernel() const {
  // @@protoc_insertion_point(field_get:dsm.KernelDone.kernel)
  return kernel_ != NULL ? *kernel_ : *default_instance_->kernel_;
}
inline ::dsm::KernelRequest* KernelDone::mutable_kernel() {
  set_has_kernel();
  if (kernel_ == NULL) {
    kernel_ = new ::dsm::KernelRequest;
  }
  // @@protoc_insertion_point(field_mutable:dsm.KernelDone.kernel)
  return kernel_;
}
inline ::dsm::KernelRequest* KernelDone::release_kernel() {
  // @@protoc_insertion_point(field_release:dsm.KernelDone.kernel)
  clear_has_kernel();
  ::dsm::KernelRequest* temp = kernel_;
  kernel_ = NULL;
  return temp;
}
inline void KernelDone::set_allocated_kernel(::dsm::KernelRequest* kernel) {
  delete kernel_;
  kernel_ = kernel;
  if (kernel) {
    set_has_kernel();
  } else {
    clear_has_kernel();
  }
  // @@protoc_insertion_point(field_set_allocated:dsm.KernelDone.kernel)
}

// repeated .dsm.ShardInfo shards = 5;
inline int KernelDone::shards_size() const {
  return shards_.size();
}
inline void KernelDone::clear_shards() {
  shards_.Clear();
}
inline const ::dsm::ShardInfo& KernelDone::shards(int index) const {
  // @@protoc_insertion_point(field_get:dsm.KernelDone.shards)
  return shards_.Get(index);
}
inline ::dsm::ShardInfo* KernelDone::mutable_shards(int index) {
  // @@protoc_insertion_point(field_mutable:dsm.KernelDone.shards)
  return shards_.Mutable(index);
}
inline ::dsm::ShardInfo* KernelDone::add_shards() {
  // @@protoc_insertion_point(field_add:dsm.KernelDone.shards)
  return shards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dsm::ShardInfo >*
KernelDone::mutable_shards() {
  // @@protoc_insertion_point(field_mutable_list:dsm.KernelDone.shards)
  return &shards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dsm::ShardInfo >&
KernelDone::shards() const {
  // @@protoc_insertion_point(field_list:dsm.KernelDone.shards)
  return shards_;
}

// -------------------------------------------------------------------

// IteratorRequest

// required uint32 table = 1;
inline bool IteratorRequest::has_table() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IteratorRequest::set_has_table() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IteratorRequest::clear_has_table() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IteratorRequest::clear_table() {
  table_ = 0u;
  clear_has_table();
}
inline ::google::protobuf::uint32 IteratorRequest::table() const {
  // @@protoc_insertion_point(field_get:dsm.IteratorRequest.table)
  return table_;
}
inline void IteratorRequest::set_table(::google::protobuf::uint32 value) {
  set_has_table();
  table_ = value;
  // @@protoc_insertion_point(field_set:dsm.IteratorRequest.table)
}

// required uint32 shard = 2;
inline bool IteratorRequest::has_shard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IteratorRequest::set_has_shard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IteratorRequest::clear_has_shard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IteratorRequest::clear_shard() {
  shard_ = 0u;
  clear_has_shard();
}
inline ::google::protobuf::uint32 IteratorRequest::shard() const {
  // @@protoc_insertion_point(field_get:dsm.IteratorRequest.shard)
  return shard_;
}
inline void IteratorRequest::set_shard(::google::protobuf::uint32 value) {
  set_has_shard();
  shard_ = value;
  // @@protoc_insertion_point(field_set:dsm.IteratorRequest.shard)
}

// optional int32 id = 3 [default = -1];
inline bool IteratorRequest::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IteratorRequest::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IteratorRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IteratorRequest::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 IteratorRequest::id() const {
  // @@protoc_insertion_point(field_get:dsm.IteratorRequest.id)
  return id_;
}
inline void IteratorRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:dsm.IteratorRequest.id)
}

// optional uint32 row_count = 4 [default = 1];
inline bool IteratorRequest::has_row_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IteratorRequest::set_has_row_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IteratorRequest::clear_has_row_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IteratorRequest::clear_row_count() {
  row_count_ = 1u;
  clear_has_row_count();
}
inline ::google::protobuf::uint32 IteratorRequest::row_count() const {
  // @@protoc_insertion_point(field_get:dsm.IteratorRequest.row_count)
  return row_count_;
}
inline void IteratorRequest::set_row_count(::google::protobuf::uint32 value) {
  set_has_row_count();
  row_count_ = value;
  // @@protoc_insertion_point(field_set:dsm.IteratorRequest.row_count)
}

// -------------------------------------------------------------------

// IteratorResponse

// required uint32 id = 1;
inline bool IteratorResponse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IteratorResponse::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IteratorResponse::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IteratorResponse::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 IteratorResponse::id() const {
  // @@protoc_insertion_point(field_get:dsm.IteratorResponse.id)
  return id_;
}
inline void IteratorResponse::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:dsm.IteratorResponse.id)
}

// required bool done = 2;
inline bool IteratorResponse::has_done() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IteratorResponse::set_has_done() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IteratorResponse::clear_has_done() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IteratorResponse::clear_done() {
  done_ = false;
  clear_has_done();
}
inline bool IteratorResponse::done() const {
  // @@protoc_insertion_point(field_get:dsm.IteratorResponse.done)
  return done_;
}
inline void IteratorResponse::set_done(bool value) {
  set_has_done();
  done_ = value;
  // @@protoc_insertion_point(field_set:dsm.IteratorResponse.done)
}

// repeated bytes key = 3;
inline int IteratorResponse::key_size() const {
  return key_.size();
}
inline void IteratorResponse::clear_key() {
  key_.Clear();
}
inline const ::std::string& IteratorResponse::key(int index) const {
  // @@protoc_insertion_point(field_get:dsm.IteratorResponse.key)
  return key_.Get(index);
}
inline ::std::string* IteratorResponse::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:dsm.IteratorResponse.key)
  return key_.Mutable(index);
}
inline void IteratorResponse::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dsm.IteratorResponse.key)
  key_.Mutable(index)->assign(value);
}
inline void IteratorResponse::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dsm.IteratorResponse.key)
}
inline void IteratorResponse::set_key(int index, const void* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dsm.IteratorResponse.key)
}
inline ::std::string* IteratorResponse::add_key() {
  // @@protoc_insertion_point(field_add_mutable:dsm.IteratorResponse.key)
  return key_.Add();
}
inline void IteratorResponse::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dsm.IteratorResponse.key)
}
inline void IteratorResponse::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dsm.IteratorResponse.key)
}
inline void IteratorResponse::add_key(const void* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dsm.IteratorResponse.key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
IteratorResponse::key() const {
  // @@protoc_insertion_point(field_list:dsm.IteratorResponse.key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
IteratorResponse::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:dsm.IteratorResponse.key)
  return &key_;
}

// repeated bytes value = 4;
inline int IteratorResponse::value_size() const {
  return value_.size();
}
inline void IteratorResponse::clear_value() {
  value_.Clear();
}
inline const ::std::string& IteratorResponse::value(int index) const {
  // @@protoc_insertion_point(field_get:dsm.IteratorResponse.value)
  return value_.Get(index);
}
inline ::std::string* IteratorResponse::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:dsm.IteratorResponse.value)
  return value_.Mutable(index);
}
inline void IteratorResponse::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dsm.IteratorResponse.value)
  value_.Mutable(index)->assign(value);
}
inline void IteratorResponse::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dsm.IteratorResponse.value)
}
inline void IteratorResponse::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dsm.IteratorResponse.value)
}
inline ::std::string* IteratorResponse::add_value() {
  // @@protoc_insertion_point(field_add_mutable:dsm.IteratorResponse.value)
  return value_.Add();
}
inline void IteratorResponse::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dsm.IteratorResponse.value)
}
inline void IteratorResponse::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dsm.IteratorResponse.value)
}
inline void IteratorResponse::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dsm.IteratorResponse.value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
IteratorResponse::value() const {
  // @@protoc_insertion_point(field_list:dsm.IteratorResponse.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
IteratorResponse::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:dsm.IteratorResponse.value)
  return &value_;
}

// required uint32 row_count = 5;
inline bool IteratorResponse::has_row_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IteratorResponse::set_has_row_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IteratorResponse::clear_has_row_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IteratorResponse::clear_row_count() {
  row_count_ = 0u;
  clear_has_row_count();
}
inline ::google::protobuf::uint32 IteratorResponse::row_count() const {
  // @@protoc_insertion_point(field_get:dsm.IteratorResponse.row_count)
  return row_count_;
}
inline void IteratorResponse::set_row_count(::google::protobuf::uint32 value) {
  set_has_row_count();
  row_count_ = value;
  // @@protoc_insertion_point(field_set:dsm.IteratorResponse.row_count)
}

// -------------------------------------------------------------------

// HashGet

// required uint32 table = 1;
inline bool HashGet::has_table() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HashGet::set_has_table() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HashGet::clear_has_table() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HashGet::clear_table() {
  table_ = 0u;
  clear_has_table();
}
inline ::google::protobuf::uint32 HashGet::table() const {
  // @@protoc_insertion_point(field_get:dsm.HashGet.table)
  return table_;
}
inline void HashGet::set_table(::google::protobuf::uint32 value) {
  set_has_table();
  table_ = value;
  // @@protoc_insertion_point(field_set:dsm.HashGet.table)
}

// required uint32 shard = 2;
inline bool HashGet::has_shard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HashGet::set_has_shard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HashGet::clear_has_shard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HashGet::clear_shard() {
  shard_ = 0u;
  clear_has_shard();
}
inline ::google::protobuf::uint32 HashGet::shard() const {
  // @@protoc_insertion_point(field_get:dsm.HashGet.shard)
  return shard_;
}
inline void HashGet::set_shard(::google::protobuf::uint32 value) {
  set_has_shard();
  shard_ = value;
  // @@protoc_insertion_point(field_set:dsm.HashGet.shard)
}

// optional bytes key = 3;
inline bool HashGet::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HashGet::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HashGet::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HashGet::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& HashGet::key() const {
  // @@protoc_insertion_point(field_get:dsm.HashGet.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HashGet::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dsm.HashGet.key)
}
inline void HashGet::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dsm.HashGet.key)
}
inline void HashGet::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dsm.HashGet.key)
}
inline ::std::string* HashGet::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:dsm.HashGet.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HashGet::release_key() {
  // @@protoc_insertion_point(field_release:dsm.HashGet.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HashGet::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dsm.HashGet.key)
}

// optional uint32 index = 4;
inline bool HashGet::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HashGet::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HashGet::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HashGet::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 HashGet::index() const {
  // @@protoc_insertion_point(field_get:dsm.HashGet.index)
  return index_;
}
inline void HashGet::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:dsm.HashGet.index)
}

// -------------------------------------------------------------------

// TableData

// required uint32 source = 1;
inline bool TableData::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableData::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableData::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableData::clear_source() {
  source_ = 0u;
  clear_has_source();
}
inline ::google::protobuf::uint32 TableData::source() const {
  // @@protoc_insertion_point(field_get:dsm.TableData.source)
  return source_;
}
inline void TableData::set_source(::google::protobuf::uint32 value) {
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:dsm.TableData.source)
}

// required uint32 table = 2;
inline bool TableData::has_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TableData::set_has_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TableData::clear_has_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TableData::clear_table() {
  table_ = 0u;
  clear_has_table();
}
inline ::google::protobuf::uint32 TableData::table() const {
  // @@protoc_insertion_point(field_get:dsm.TableData.table)
  return table_;
}
inline void TableData::set_table(::google::protobuf::uint32 value) {
  set_has_table();
  table_ = value;
  // @@protoc_insertion_point(field_set:dsm.TableData.table)
}

// required uint32 shard = 3;
inline bool TableData::has_shard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TableData::set_has_shard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TableData::clear_has_shard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TableData::clear_shard() {
  shard_ = 0u;
  clear_has_shard();
}
inline ::google::protobuf::uint32 TableData::shard() const {
  // @@protoc_insertion_point(field_get:dsm.TableData.shard)
  return shard_;
}
inline void TableData::set_shard(::google::protobuf::uint32 value) {
  set_has_shard();
  shard_ = value;
  // @@protoc_insertion_point(field_set:dsm.TableData.shard)
}

// required bool done = 4;
inline bool TableData::has_done() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TableData::set_has_done() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TableData::clear_has_done() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TableData::clear_done() {
  done_ = false;
  clear_has_done();
}
inline bool TableData::done() const {
  // @@protoc_insertion_point(field_get:dsm.TableData.done)
  return done_;
}
inline void TableData::set_done(bool value) {
  set_has_done();
  done_ = value;
  // @@protoc_insertion_point(field_set:dsm.TableData.done)
}

// optional bytes table_data = 5;
inline bool TableData::has_table_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TableData::set_has_table_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TableData::clear_has_table_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TableData::clear_table_data() {
  table_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_table_data();
}
inline const ::std::string& TableData::table_data() const {
  // @@protoc_insertion_point(field_get:dsm.TableData.table_data)
  return table_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableData::set_table_data(const ::std::string& value) {
  set_has_table_data();
  table_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dsm.TableData.table_data)
}
inline void TableData::set_table_data(const char* value) {
  set_has_table_data();
  table_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dsm.TableData.table_data)
}
inline void TableData::set_table_data(const void* value, size_t size) {
  set_has_table_data();
  table_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dsm.TableData.table_data)
}
inline ::std::string* TableData::mutable_table_data() {
  set_has_table_data();
  // @@protoc_insertion_point(field_mutable:dsm.TableData.table_data)
  return table_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableData::release_table_data() {
  // @@protoc_insertion_point(field_release:dsm.TableData.table_data)
  clear_has_table_data();
  return table_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableData::set_allocated_table_data(::std::string* table_data) {
  if (table_data != NULL) {
    set_has_table_data();
  } else {
    clear_has_table_data();
  }
  table_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_data);
  // @@protoc_insertion_point(field_set_allocated:dsm.TableData.table_data)
}

// repeated .dsm.Record rec_data = 6;
inline int TableData::rec_data_size() const {
  return rec_data_.size();
}
inline void TableData::clear_rec_data() {
  rec_data_.Clear();
}
inline const ::dsm::Record& TableData::rec_data(int index) const {
  // @@protoc_insertion_point(field_get:dsm.TableData.rec_data)
  return rec_data_.Get(index);
}
inline ::dsm::Record* TableData::mutable_rec_data(int index) {
  // @@protoc_insertion_point(field_mutable:dsm.TableData.rec_data)
  return rec_data_.Mutable(index);
}
inline ::dsm::Record* TableData::add_rec_data() {
  // @@protoc_insertion_point(field_add:dsm.TableData.rec_data)
  return rec_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dsm::Record >*
TableData::mutable_rec_data() {
  // @@protoc_insertion_point(field_mutable_list:dsm.TableData.rec_data)
  return &rec_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dsm::Record >&
TableData::rec_data() const {
  // @@protoc_insertion_point(field_list:dsm.TableData.rec_data)
  return rec_data_;
}

// optional int32 epoch = 11;
inline bool TableData::has_epoch() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TableData::set_has_epoch() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TableData::clear_has_epoch() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TableData::clear_epoch() {
  epoch_ = 0;
  clear_has_epoch();
}
inline ::google::protobuf::int32 TableData::epoch() const {
  // @@protoc_insertion_point(field_get:dsm.TableData.epoch)
  return epoch_;
}
inline void TableData::set_epoch(::google::protobuf::int32 value) {
  set_has_epoch();
  epoch_ = value;
  // @@protoc_insertion_point(field_set:dsm.TableData.epoch)
}

// optional int32 marker = 12 [default = -1];
inline bool TableData::has_marker() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TableData::set_has_marker() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TableData::clear_has_marker() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TableData::clear_marker() {
  marker_ = -1;
  clear_has_marker();
}
inline ::google::protobuf::int32 TableData::marker() const {
  // @@protoc_insertion_point(field_get:dsm.TableData.marker)
  return marker_;
}
inline void TableData::set_marker(::google::protobuf::int32 value) {
  set_has_marker();
  marker_ = value;
  // @@protoc_insertion_point(field_set:dsm.TableData.marker)
}

// optional bool missing_key = 13;
inline bool TableData::has_missing_key() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TableData::set_has_missing_key() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TableData::clear_has_missing_key() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TableData::clear_missing_key() {
  missing_key_ = false;
  clear_has_missing_key();
}
inline bool TableData::missing_key() const {
  // @@protoc_insertion_point(field_get:dsm.TableData.missing_key)
  return missing_key_;
}
inline void TableData::set_missing_key(bool value) {
  set_has_missing_key();
  missing_key_ = value;
  // @@protoc_insertion_point(field_set:dsm.TableData.missing_key)
}

// -------------------------------------------------------------------

// KVPairData

// required uint32 source = 1;
inline bool KVPairData::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVPairData::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVPairData::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVPairData::clear_source() {
  source_ = 0u;
  clear_has_source();
}
inline ::google::protobuf::uint32 KVPairData::source() const {
  // @@protoc_insertion_point(field_get:dsm.KVPairData.source)
  return source_;
}
inline void KVPairData::set_source(::google::protobuf::uint32 value) {
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:dsm.KVPairData.source)
}

// required uint32 table = 2;
inline bool KVPairData::has_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVPairData::set_has_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVPairData::clear_has_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVPairData::clear_table() {
  table_ = 0u;
  clear_has_table();
}
inline ::google::protobuf::uint32 KVPairData::table() const {
  // @@protoc_insertion_point(field_get:dsm.KVPairData.table)
  return table_;
}
inline void KVPairData::set_table(::google::protobuf::uint32 value) {
  set_has_table();
  table_ = value;
  // @@protoc_insertion_point(field_set:dsm.KVPairData.table)
}

// required uint32 shard = 3;
inline bool KVPairData::has_shard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KVPairData::set_has_shard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KVPairData::clear_has_shard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KVPairData::clear_shard() {
  shard_ = 0u;
  clear_has_shard();
}
inline ::google::protobuf::uint32 KVPairData::shard() const {
  // @@protoc_insertion_point(field_get:dsm.KVPairData.shard)
  return shard_;
}
inline void KVPairData::set_shard(::google::protobuf::uint32 value) {
  set_has_shard();
  shard_ = value;
  // @@protoc_insertion_point(field_set:dsm.KVPairData.shard)
}

// required bool done = 4;
inline bool KVPairData::has_done() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KVPairData::set_has_done() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KVPairData::clear_has_done() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KVPairData::clear_done() {
  done_ = false;
  clear_has_done();
}
inline bool KVPairData::done() const {
  // @@protoc_insertion_point(field_get:dsm.KVPairData.done)
  return done_;
}
inline void KVPairData::set_done(bool value) {
  set_has_done();
  done_ = value;
  // @@protoc_insertion_point(field_set:dsm.KVPairData.done)
}

// optional bytes table_data = 5;
inline bool KVPairData::has_table_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void KVPairData::set_has_table_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void KVPairData::clear_has_table_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void KVPairData::clear_table_data() {
  table_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_table_data();
}
inline const ::std::string& KVPairData::table_data() const {
  // @@protoc_insertion_point(field_get:dsm.KVPairData.table_data)
  return table_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KVPairData::set_table_data(const ::std::string& value) {
  set_has_table_data();
  table_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dsm.KVPairData.table_data)
}
inline void KVPairData::set_table_data(const char* value) {
  set_has_table_data();
  table_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dsm.KVPairData.table_data)
}
inline void KVPairData::set_table_data(const void* value, size_t size) {
  set_has_table_data();
  table_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dsm.KVPairData.table_data)
}
inline ::std::string* KVPairData::mutable_table_data() {
  set_has_table_data();
  // @@protoc_insertion_point(field_mutable:dsm.KVPairData.table_data)
  return table_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KVPairData::release_table_data() {
  // @@protoc_insertion_point(field_release:dsm.KVPairData.table_data)
  clear_has_table_data();
  return table_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KVPairData::set_allocated_table_data(::std::string* table_data) {
  if (table_data != NULL) {
    set_has_table_data();
  } else {
    clear_has_table_data();
  }
  table_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_data);
  // @@protoc_insertion_point(field_set_allocated:dsm.KVPairData.table_data)
}

// repeated .dsm.Arg kv_data = 6;
inline int KVPairData::kv_data_size() const {
  return kv_data_.size();
}
inline void KVPairData::clear_kv_data() {
  kv_data_.Clear();
}
inline const ::dsm::Arg& KVPairData::kv_data(int index) const {
  // @@protoc_insertion_point(field_get:dsm.KVPairData.kv_data)
  return kv_data_.Get(index);
}
inline ::dsm::Arg* KVPairData::mutable_kv_data(int index) {
  // @@protoc_insertion_point(field_mutable:dsm.KVPairData.kv_data)
  return kv_data_.Mutable(index);
}
inline ::dsm::Arg* KVPairData::add_kv_data() {
  // @@protoc_insertion_point(field_add:dsm.KVPairData.kv_data)
  return kv_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dsm::Arg >*
KVPairData::mutable_kv_data() {
  // @@protoc_insertion_point(field_mutable_list:dsm.KVPairData.kv_data)
  return &kv_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dsm::Arg >&
KVPairData::kv_data() const {
  // @@protoc_insertion_point(field_list:dsm.KVPairData.kv_data)
  return kv_data_;
}

// optional int32 epoch = 11;
inline bool KVPairData::has_epoch() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void KVPairData::set_has_epoch() {
  _has_bits_[0] |= 0x00000040u;
}
inline void KVPairData::clear_has_epoch() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void KVPairData::clear_epoch() {
  epoch_ = 0;
  clear_has_epoch();
}
inline ::google::protobuf::int32 KVPairData::epoch() const {
  // @@protoc_insertion_point(field_get:dsm.KVPairData.epoch)
  return epoch_;
}
inline void KVPairData::set_epoch(::google::protobuf::int32 value) {
  set_has_epoch();
  epoch_ = value;
  // @@protoc_insertion_point(field_set:dsm.KVPairData.epoch)
}

// optional int32 marker = 12 [default = -1];
inline bool KVPairData::has_marker() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void KVPairData::set_has_marker() {
  _has_bits_[0] |= 0x00000080u;
}
inline void KVPairData::clear_has_marker() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void KVPairData::clear_marker() {
  marker_ = -1;
  clear_has_marker();
}
inline ::google::protobuf::int32 KVPairData::marker() const {
  // @@protoc_insertion_point(field_get:dsm.KVPairData.marker)
  return marker_;
}
inline void KVPairData::set_marker(::google::protobuf::int32 value) {
  set_has_marker();
  marker_ = value;
  // @@protoc_insertion_point(field_set:dsm.KVPairData.marker)
}

// optional bool missing_key = 13;
inline bool KVPairData::has_missing_key() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void KVPairData::set_has_missing_key() {
  _has_bits_[0] |= 0x00000100u;
}
inline void KVPairData::clear_has_missing_key() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void KVPairData::clear_missing_key() {
  missing_key_ = false;
  clear_has_missing_key();
}
inline bool KVPairData::missing_key() const {
  // @@protoc_insertion_point(field_get:dsm.KVPairData.missing_key)
  return missing_key_;
}
inline void KVPairData::set_missing_key(bool value) {
  set_has_missing_key();
  missing_key_ = value;
  // @@protoc_insertion_point(field_set:dsm.KVPairData.missing_key)
}

// -------------------------------------------------------------------

// CheckpointRequest

// required int32 epoch = 1;
inline bool CheckpointRequest::has_epoch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckpointRequest::set_has_epoch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckpointRequest::clear_has_epoch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckpointRequest::clear_epoch() {
  epoch_ = 0;
  clear_has_epoch();
}
inline ::google::protobuf::int32 CheckpointRequest::epoch() const {
  // @@protoc_insertion_point(field_get:dsm.CheckpointRequest.epoch)
  return epoch_;
}
inline void CheckpointRequest::set_epoch(::google::protobuf::int32 value) {
  set_has_epoch();
  epoch_ = value;
  // @@protoc_insertion_point(field_set:dsm.CheckpointRequest.epoch)
}

// required int32 checkpoint_type = 2;
inline bool CheckpointRequest::has_checkpoint_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckpointRequest::set_has_checkpoint_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckpointRequest::clear_has_checkpoint_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckpointRequest::clear_checkpoint_type() {
  checkpoint_type_ = 0;
  clear_has_checkpoint_type();
}
inline ::google::protobuf::int32 CheckpointRequest::checkpoint_type() const {
  // @@protoc_insertion_point(field_get:dsm.CheckpointRequest.checkpoint_type)
  return checkpoint_type_;
}
inline void CheckpointRequest::set_checkpoint_type(::google::protobuf::int32 value) {
  set_has_checkpoint_type();
  checkpoint_type_ = value;
  // @@protoc_insertion_point(field_set:dsm.CheckpointRequest.checkpoint_type)
}

// repeated int32 table = 3;
inline int CheckpointRequest::table_size() const {
  return table_.size();
}
inline void CheckpointRequest::clear_table() {
  table_.Clear();
}
inline ::google::protobuf::int32 CheckpointRequest::table(int index) const {
  // @@protoc_insertion_point(field_get:dsm.CheckpointRequest.table)
  return table_.Get(index);
}
inline void CheckpointRequest::set_table(int index, ::google::protobuf::int32 value) {
  table_.Set(index, value);
  // @@protoc_insertion_point(field_set:dsm.CheckpointRequest.table)
}
inline void CheckpointRequest::add_table(::google::protobuf::int32 value) {
  table_.Add(value);
  // @@protoc_insertion_point(field_add:dsm.CheckpointRequest.table)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CheckpointRequest::table() const {
  // @@protoc_insertion_point(field_list:dsm.CheckpointRequest.table)
  return table_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CheckpointRequest::mutable_table() {
  // @@protoc_insertion_point(field_mutable_list:dsm.CheckpointRequest.table)
  return &table_;
}

// -------------------------------------------------------------------

// TerminationNotification

// required int32 epoch = 1;
inline bool TerminationNotification::has_epoch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TerminationNotification::set_has_epoch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TerminationNotification::clear_has_epoch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TerminationNotification::clear_epoch() {
  epoch_ = 0;
  clear_has_epoch();
}
inline ::google::protobuf::int32 TerminationNotification::epoch() const {
  // @@protoc_insertion_point(field_get:dsm.TerminationNotification.epoch)
  return epoch_;
}
inline void TerminationNotification::set_epoch(::google::protobuf::int32 value) {
  set_has_epoch();
  epoch_ = value;
  // @@protoc_insertion_point(field_set:dsm.TerminationNotification.epoch)
}

// -------------------------------------------------------------------

// StartRestore

// required int32 epoch = 1;
inline bool StartRestore::has_epoch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartRestore::set_has_epoch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartRestore::clear_has_epoch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartRestore::clear_epoch() {
  epoch_ = 0;
  clear_has_epoch();
}
inline ::google::protobuf::int32 StartRestore::epoch() const {
  // @@protoc_insertion_point(field_get:dsm.StartRestore.epoch)
  return epoch_;
}
inline void StartRestore::set_epoch(::google::protobuf::int32 value) {
  set_has_epoch();
  epoch_ = value;
  // @@protoc_insertion_point(field_set:dsm.StartRestore.epoch)
}

// -------------------------------------------------------------------

// CheckpointInfo

// required int32 checkpoint_epoch = 1;
inline bool CheckpointInfo::has_checkpoint_epoch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckpointInfo::set_has_checkpoint_epoch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckpointInfo::clear_has_checkpoint_epoch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckpointInfo::clear_checkpoint_epoch() {
  checkpoint_epoch_ = 0;
  clear_has_checkpoint_epoch();
}
inline ::google::protobuf::int32 CheckpointInfo::checkpoint_epoch() const {
  // @@protoc_insertion_point(field_get:dsm.CheckpointInfo.checkpoint_epoch)
  return checkpoint_epoch_;
}
inline void CheckpointInfo::set_checkpoint_epoch(::google::protobuf::int32 value) {
  set_has_checkpoint_epoch();
  checkpoint_epoch_ = value;
  // @@protoc_insertion_point(field_set:dsm.CheckpointInfo.checkpoint_epoch)
}

// required int32 kernel_epoch = 2;
inline bool CheckpointInfo::has_kernel_epoch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckpointInfo::set_has_kernel_epoch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckpointInfo::clear_has_kernel_epoch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckpointInfo::clear_kernel_epoch() {
  kernel_epoch_ = 0;
  clear_has_kernel_epoch();
}
inline ::google::protobuf::int32 CheckpointInfo::kernel_epoch() const {
  // @@protoc_insertion_point(field_get:dsm.CheckpointInfo.kernel_epoch)
  return kernel_epoch_;
}
inline void CheckpointInfo::set_kernel_epoch(::google::protobuf::int32 value) {
  set_has_kernel_epoch();
  kernel_epoch_ = value;
  // @@protoc_insertion_point(field_set:dsm.CheckpointInfo.kernel_epoch)
}

// -------------------------------------------------------------------

// SwapTable

// required int32 table_a = 1;
inline bool SwapTable::has_table_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SwapTable::set_has_table_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SwapTable::clear_has_table_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SwapTable::clear_table_a() {
  table_a_ = 0;
  clear_has_table_a();
}
inline ::google::protobuf::int32 SwapTable::table_a() const {
  // @@protoc_insertion_point(field_get:dsm.SwapTable.table_a)
  return table_a_;
}
inline void SwapTable::set_table_a(::google::protobuf::int32 value) {
  set_has_table_a();
  table_a_ = value;
  // @@protoc_insertion_point(field_set:dsm.SwapTable.table_a)
}

// required int32 table_b = 2;
inline bool SwapTable::has_table_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SwapTable::set_has_table_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SwapTable::clear_has_table_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SwapTable::clear_table_b() {
  table_b_ = 0;
  clear_has_table_b();
}
inline ::google::protobuf::int32 SwapTable::table_b() const {
  // @@protoc_insertion_point(field_get:dsm.SwapTable.table_b)
  return table_b_;
}
inline void SwapTable::set_table_b(::google::protobuf::int32 value) {
  set_has_table_b();
  table_b_ = value;
  // @@protoc_insertion_point(field_set:dsm.SwapTable.table_b)
}

// -------------------------------------------------------------------

// ClearTable

// required int32 table = 1;
inline bool ClearTable::has_table() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClearTable::set_has_table() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClearTable::clear_has_table() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClearTable::clear_table() {
  table_ = 0;
  clear_has_table();
}
inline ::google::protobuf::int32 ClearTable::table() const {
  // @@protoc_insertion_point(field_get:dsm.ClearTable.table)
  return table_;
}
inline void ClearTable::set_table(::google::protobuf::int32 value) {
  set_has_table();
  table_ = value;
  // @@protoc_insertion_point(field_set:dsm.ClearTable.table)
}

// -------------------------------------------------------------------

// EnableTrigger

// required int32 trigger_id = 1;
inline bool EnableTrigger::has_trigger_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableTrigger::set_has_trigger_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableTrigger::clear_has_trigger_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableTrigger::clear_trigger_id() {
  trigger_id_ = 0;
  clear_has_trigger_id();
}
inline ::google::protobuf::int32 EnableTrigger::trigger_id() const {
  // @@protoc_insertion_point(field_get:dsm.EnableTrigger.trigger_id)
  return trigger_id_;
}
inline void EnableTrigger::set_trigger_id(::google::protobuf::int32 value) {
  set_has_trigger_id();
  trigger_id_ = value;
  // @@protoc_insertion_point(field_set:dsm.EnableTrigger.trigger_id)
}

// required int32 table = 2;
inline bool EnableTrigger::has_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnableTrigger::set_has_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnableTrigger::clear_has_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnableTrigger::clear_table() {
  table_ = 0;
  clear_has_table();
}
inline ::google::protobuf::int32 EnableTrigger::table() const {
  // @@protoc_insertion_point(field_get:dsm.EnableTrigger.table)
  return table_;
}
inline void EnableTrigger::set_table(::google::protobuf::int32 value) {
  set_has_table();
  table_ = value;
  // @@protoc_insertion_point(field_set:dsm.EnableTrigger.table)
}

// required bool enable = 3;
inline bool EnableTrigger::has_enable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnableTrigger::set_has_enable() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnableTrigger::clear_has_enable() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnableTrigger::clear_enable() {
  enable_ = false;
  clear_has_enable();
}
inline bool EnableTrigger::enable() const {
  // @@protoc_insertion_point(field_get:dsm.EnableTrigger.enable)
  return enable_;
}
inline void EnableTrigger::set_enable(bool value) {
  set_has_enable();
  enable_ = value;
  // @@protoc_insertion_point(field_set:dsm.EnableTrigger.enable)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dsm

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::dsm::CheckpointType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dsm::CheckpointType>() {
  return ::dsm::CheckpointType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_worker_2fworker_2eproto__INCLUDED
